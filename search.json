[{"path":"https://thomazbastiaanssen.github.io/anansi/articles/adjacency_matrices.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Adjacency matrices","text":"common challenge integrative analysis high-dimensional data sets subsequent biological interpretation. Anansi addresses challenge considering pairwise associations known occur priori. order achieve , need provide relational information anansi form (bi)adjacency matrix. vignette, provide intuition (bi)adjacency demonstrate provide custom relational information anansi.","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/adjacency_matrices.html","id":"example-from-biology-the-krebs-cycle","dir":"Articles","previous_headings":"Understanding adjacency matrices","what":"Example from Biology: The Krebs cycle","title":"Adjacency matrices","text":"Recall citric acid cycle, Krebs cycle, central piece metabolic machinery. short, enables oxidative phosphorylation. See figure @ref(fig:plot-krebs)simplified representation. figure, 8 unique enzymatic reactions 9 unique metabolites. Two simplified representations Krebs cycle. Orange marks metabolites blue marks enzymes.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/adjacency_matrices.html","id":"adjacency-matrices-allow-us-to-be-specific-in-our-questions","dir":"Articles","previous_headings":"Understanding adjacency matrices > Example from Biology: The Krebs cycle","what":"Adjacency matrices allow us to be specific in our questions","title":"Adjacency matrices","text":"Let’s imagine (high-dimensional proxy) measurements available types. instance, transcription data enzymes metabolomics data metabolites. represent two data sets like two sets features. perform -vs-integrative analysis two data sets, comprehensively testing every metabolite-enzyme pair, ’d test \\(8\\times9=72\\) hypotheses. Figure @ref(fig:-v--p1). Graph representation possible association sctructures Krebs cycle. ) -vs-, full graph. B) Constrained, linking metabolites enzymes known directly interact. Often however, subset comparisons scientifically relevant investigate. case instance, 17 associations enzyme-metabolite pairs likely make sense. Figure @ref(fig:-v--p1)B. Non-selectively testing 72 associations actively harms statistical power, 55 tests likely interpreted, p-values still tallied purpose FDR FWER. Moreover, tend obscure biologically interpretable findings. order ‘know’ features-pairs data set considered, anansi requires biadjacency matrix. biadjacency matrix figure can seen figure @ref(fig:-v--p2)B. Matrix representation constrained analysis Krebs cycle, cells marked ‘X’ signifying tested feature-pairs.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/adjacency_matrices.html","id":"defining-an-adjacency-matrix","dir":"Articles","previous_headings":"","what":"Defining an adjacency matrix","title":"Adjacency matrices","text":"numerous ways can define adjacency matrix. , demonstrate graph-based matrix based approach.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/adjacency_matrices.html","id":"the-graph-approach","dir":"Articles","previous_headings":"Defining an adjacency matrix","what":"The graph approach","title":"Adjacency matrices","text":"Importantly, (bi)adjacency matrices can understood graphs. Two common packages deal graphs igraph graph. Now constructed graph, still need identify features, vertices, belong data modality, case either enzymes metabolites. igraph using boolean vector, TRUE values become columns, corresponds tableX, whereas FALSE values become rows, corresponding tableY. Though biadjacency support graph currently limited, note igraph graph objects can converted using graph_from_graphnel() as_graphnel() functions igraph.","code":"library(igraph)  # Convert data.frame to graph g <- graph_from_data_frame(krebs_edge_df, directed = FALSE) V(g)$type <- V(g)$name %in% krebs_edge_df$Metabolite  # Now that we've defined type, we can convert to biadjacency matrix:  bi_mat1 <- as_biadjacency_matrix(g)  head(bi_mat1, n = c(4, 5)) ##                         cis-aconitate citrate fumarate isocitrate L-malate ## aconitase                           1       1        0          1        0 ## citrate synthase                    0       1        0          0        0 ## fumarase                            0       0        1          0        1 ## succinate dehydrogenase             0       0        1          0        0"},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/adjacency_matrices.html","id":"the-matrix-approach","dir":"Articles","previous_headings":"Defining an adjacency matrix","what":"The matrix approach","title":"Adjacency matrices","text":"can also define matrix directly. Conveniently, sparse matrices can defined easily starting data. Matrix library provides fantastic support .","code":"library(Matrix)  # For this approach, it's useful to prepare the input as two factors: enzymes     <- factor(krebs_edge_df$Enzyme) metabolites <- factor(krebs_edge_df$Metabolite)  # We can get integers out of factors, corresponding to their level indices  bi_mat2 <- sparseMatrix(i = as.integer(enzymes),               j = as.integer(metabolites),               dimnames = list(                levels(enzymes),                levels(metabolites)                )              )  head(bi_mat2, n = c(4, 5)) ## 4 x 5 sparse Matrix of class \"ngCMatrix\" ##                          cis-aconitate citrate fumarate isocitrate ## aconitase                            |       |        .          | ## citrate synthase                     .       |        .          . ## fumarase                             .       .        |          . ## isocitrate dehydrogenase             .       .        .          | ##                          ketoglutarate ## aconitase                            . ## citrate synthase                     . ## fumarase                             . ## isocitrate dehydrogenase             |"},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/adjacency_matrices.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Adjacency matrices","text":"","code":"sessionInfo() ## R version 4.4.2 (2024-10-31) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.1 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] Matrix_1.7-1     igraph_2.1.4     patchwork_1.3.0  ggplot2_3.5.1    ## [5] anansi_0.6.0     BiocStyle_2.34.0 ##  ## loaded via a namespace (and not attached): ##  [1] SummarizedExperiment_1.36.0 gtable_0.3.6                ##  [3] xfun_0.50                   bslib_0.9.0                 ##  [5] htmlwidgets_1.6.4           Biobase_2.66.0              ##  [7] lattice_0.22-6              generics_0.1.3              ##  [9] vctrs_0.6.5                 tools_4.4.2                 ## [11] stats4_4.4.2                parallel_4.4.2              ## [13] tibble_3.2.1                pkgconfig_2.0.3             ## [15] desc_1.4.3                  S4Vectors_0.44.0            ## [17] lifecycle_1.0.4             GenomeInfoDbData_1.2.13     ## [19] farver_2.1.2                compiler_4.4.2              ## [21] textshaping_1.0.0           munsell_0.5.1               ## [23] ggforce_0.4.2               codetools_0.2-20            ## [25] GenomeInfoDb_1.42.3         htmltools_0.5.8.1           ## [27] sass_0.4.9                  yaml_2.3.10                 ## [29] pillar_1.10.1               pkgdown_2.1.1               ## [31] crayon_1.5.3                jquerylib_0.1.4             ## [33] MASS_7.3-61                 DelayedArray_0.32.0         ## [35] cachem_1.1.0                abind_1.4-8                 ## [37] parallelly_1.42.0           tidyselect_1.2.1            ## [39] digest_0.6.37               future_1.34.0               ## [41] dplyr_1.1.4                 bookdown_0.42               ## [43] listenv_0.9.1               labeling_0.4.3              ## [45] polyclip_1.10-7             fastmap_1.2.0               ## [47] grid_4.4.2                  colorspace_2.1-1            ## [49] cli_3.6.4                   SparseArray_1.6.1           ## [51] magrittr_2.0.3              S4Arrays_1.6.0              ## [53] future.apply_1.11.3         withr_3.0.2                 ## [55] UCSC.utils_1.2.0            scales_1.3.0                ## [57] rmarkdown_2.29              XVector_0.46.0              ## [59] httr_1.4.7                  matrixStats_1.5.0           ## [61] globals_0.16.3              ragg_1.3.3                  ## [63] evaluate_1.0.3              knitr_1.49                  ## [65] GenomicRanges_1.58.0        IRanges_2.40.1              ## [67] MultiAssayExperiment_1.32.0 rlang_1.1.5                 ## [69] Rcpp_1.0.14                 glue_1.8.0                  ## [71] tweenr_2.0.3                BiocManager_1.30.25         ## [73] BiocGenerics_0.52.0         jsonlite_1.8.9              ## [75] R6_2.6.1                    MatrixGenerics_1.18.1       ## [77] systemfonts_1.2.1           fs_1.6.5                    ## [79] zlibbioc_1.52.0"},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/anansi.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started with anansi","text":"anansi package computes compares association features two ’omics datasets known interact based database KEGG. Studies including microbiome metabolomics data becoming common. Often, helpful integrate datasets order see corroborate others patterns. vs association imprecise likely yield spurious associations. package takes knowledge-based approach constrain association search space, considering metabolite-function interactions recorded pathway database. package also provides framework assess differential association. anansi geared towards metabolite-function interactions context host-microbe interactions, perfectly capable handling pair datasets features interact canonically. early version anansi used generate “Extended Data Fig. 7” paper.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/anansi.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"Getting started with anansi","text":"","code":"# install and load anansi # devtools::install_github(\"thomazbastiaanssen/anansi\") library(anansi)  # load ggplot2 and ggforce to plot results library(ggplot2) library(ggforce)  # Anansi supports parallelisation through the future.apply framework.  # You can call it like this: # plan(multisession)  # load anansi dictionary and complementary human-readable names for  # KEGG compounds and orthologues data(dictionary)  # load example data + metadata from FMT Aging study data(FMT_data)"},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/anansi.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Getting started with anansi","text":"main anansi function expects data anansiWeb format; Basically list exactly three tables: first table, tableY, count table metabolites. second table, tableX, count table functions. tables columns features rows samples. third table binary adjacency matrix column names tableY rows column names tableX columns. adjacency matrix provided anansi library referred dictionary (use look metabolites interact functions). Though example uses metabolites functions, anansi able handle type ’omics data, long dictionary available. , anansi uses type-naive nomenclature tableY tableX. Y X refer position measurements linear modeling framework: \\[Y \\sim X \\times {\\text{covariates}}\\]","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/anansi.html","id":"a-note-on-functional-microbiome-data","dir":"Articles","previous_headings":"Data preparation","what":"A note on functional microbiome data","title":"Getting started with anansi","text":"Two common questions host-microbiome field “’s ?” “?”. Techniques like 16S sequencing shotgun metagenomics sequencing commonly used answer first question. second question can bit tricky - often ’ll need functional inference software address . 16S sequencing, algorithms like PICRUSt2 Piphillin can used infer function. shotgun metagenomics, HUMANn3 bioBakery suite can used. algorithms can produce functional count data terms KEGG Orthologues (KOs). tables can directly plugged anansi.","code":"# Clean and CLR-transform the KEGG orthologue table.  # Only keep functions that are represented in the dictionary. KOs <- FMT_KOs[row.names(FMT_KOs) %in% sort(unique(unlist(anansi_dic))), ]  # Cut the decimal part off. KOs <- floor(KOs)  # Ensure all entires are numbers. KOs <- apply(KOs, c(1, 2), function(x) as.numeric(as.character(x)))  # Remove all features with < 10% prevalence in the dataset. KOs <- KOs[apply(KOs == 0, 1, sum) <= (ncol(KOs) * 0.90), ]  # Perform a centered log-ratio transformation on the functional count table. KOs.exp <- clr_c(KOs)  # anansi expects samples to be rows and features to be columns. t1 <- t(FMT_metab) t2 <- t(KOs.exp)"},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/anansi.html","id":"weave-a-web","dir":"Articles","previous_headings":"","what":"Weave a web🕸️","title":"Getting started with anansi","text":"weaveWebFromTables() function can used parse tables prepared anansiWeb object. anansiWeb format necessary input file main anansi workflow.","code":"web <- weaveWebFromTables(tableY = t1, tableX = t2, dictionary = anansi_dic) ## Operating in interaction mode ## 3 were matched between table 1 and the columns of the adjacency matrix ## 50 were matched between table 2 and the rows of the adjacency matrix"},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/anansi.html","id":"run-anansi","dir":"Articles","previous_headings":"","what":"Run anansi🕷️","title":"Getting started with anansi","text":"main workspider package called anansi. Generally, want give three arguments. First, ’s web, anansiWeb object, one generated step. Second, ’s formula, formula. instance, assess differential associations treatments, use formula ~Legend, provided column name metadata object, Third argument.","code":"anansi_out <- anansi(   web = web,   formula = ~Legend,   metadata = FMT_metadata,   adjust.method = \"BH\",   verbose = TRUE ) ## Fitting least-squares for following model: ## ~ x + Legend + x:Legend ## Running correlations for the following groups: ##  Aged yFMT, Aged oFMT, Young yFMT"},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/anansi.html","id":"spin-to-a-table","dir":"Articles","previous_headings":"","what":"Spin to a table📝","title":"Getting started with anansi","text":"anansi returns wide format table output. general reporting, recommend sticking table format ’s legible.","code":"library(tidyr)  # Use tidyr to wrangle the correlation r-values to a single column anansiLong <- anansi_out |>    pivot_longer(starts_with(\"All\") | contains(\"FMT\")) |>   separate_wider_delim(name, delim = \"_\", names = c(\"cor_group\", \"param\")) |>    pivot_wider(names_from = param, values_from = value)   # Now it's ready to be plugged into ggplot2, though let's clean up a bit more. # Only consider interactions where the entire model fits well enough. anansiLong <- anansiLong[anansiLong$full_q.values < 0.1, ]"},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/anansi.html","id":"plot-the-results","dir":"Articles","previous_headings":"","what":"Plot the results","title":"Getting started with anansi","text":"long format can helpful plug data ggplot2. , recreate part results FMT Aging study.","code":"ggplot(anansiLong) +    # Define aesthetics   aes(     x = r.values, y = feature_X,     fill = cor_group, alpha = disjointed_Legend_p.values < 0.05   ) +    # Make a vertical dashed red line at x = 0   geom_vline(xintercept = 0, linetype = \"dashed\", colour = \"red\") +    # Points show  raw correlation coefficients   geom_point(shape = 21, size = 3) +    # facet per compound   ggforce::facet_col(~feature_Y, space = \"free\", scales = \"free_y\") +    # fix the scales, labels, theme and other layout   scale_y_discrete(limits = rev, position = \"right\") +   scale_alpha_manual(     values = c(\"TRUE\" = 1, \"FALSE\" = 1 / 3),     \"Disjointed association\\np < 0.05\"   ) +   scale_fill_manual(     values = c(       \"Young yFMT\" = \"#2166ac\",       \"Aged oFMT\" = \"#b2182b\",       \"Aged yFMT\" = \"#ef8a62\",       \"All\" = \"gray\"     ),     breaks = c(\"Young yFMT\", \"Aged oFMT\", \"Aged yFMT\", \"All\"), \"Treatment\"   ) +   theme_bw() +   ylab(\"\") +   xlab(\"Pearson's \\u03c1\")"},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/anansi.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Getting started with anansi","text":"","code":"sessionInfo() ## R version 4.4.2 (2024-10-31) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.1 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] tidyr_1.3.1      ggforce_0.4.2    ggplot2_3.5.1    anansi_0.6.0     ## [5] BiocStyle_2.34.0 ##  ## loaded via a namespace (and not attached): ##  [1] SummarizedExperiment_1.36.0 gtable_0.3.6                ##  [3] xfun_0.50                   bslib_0.9.0                 ##  [5] htmlwidgets_1.6.4           Biobase_2.66.0              ##  [7] lattice_0.22-6              generics_0.1.3              ##  [9] vctrs_0.6.5                 tools_4.4.2                 ## [11] stats4_4.4.2                parallel_4.4.2              ## [13] tibble_3.2.1                pkgconfig_2.0.3             ## [15] Matrix_1.7-1                desc_1.4.3                  ## [17] S4Vectors_0.44.0            lifecycle_1.0.4             ## [19] GenomeInfoDbData_1.2.13     stringr_1.5.1               ## [21] farver_2.1.2                compiler_4.4.2              ## [23] textshaping_1.0.0           munsell_0.5.1               ## [25] codetools_0.2-20            GenomeInfoDb_1.42.3         ## [27] htmltools_0.5.8.1           sass_0.4.9                  ## [29] yaml_2.3.10                 pillar_1.10.1               ## [31] pkgdown_2.1.1               crayon_1.5.3                ## [33] jquerylib_0.1.4             MASS_7.3-61                 ## [35] DelayedArray_0.32.0         cachem_1.1.0                ## [37] abind_1.4-8                 parallelly_1.42.0           ## [39] tidyselect_1.2.1            digest_0.6.37               ## [41] stringi_1.8.4               future_1.34.0               ## [43] purrr_1.0.4                 dplyr_1.1.4                 ## [45] bookdown_0.42               listenv_0.9.1               ## [47] labeling_0.4.3              polyclip_1.10-7             ## [49] fastmap_1.2.0               grid_4.4.2                  ## [51] colorspace_2.1-1            cli_3.6.4                   ## [53] SparseArray_1.6.1           magrittr_2.0.3              ## [55] S4Arrays_1.6.0              future.apply_1.11.3         ## [57] withr_3.0.2                 UCSC.utils_1.2.0            ## [59] scales_1.3.0                rmarkdown_2.29              ## [61] XVector_0.46.0              httr_1.4.7                  ## [63] matrixStats_1.5.0           globals_0.16.3              ## [65] ragg_1.3.3                  evaluate_1.0.3              ## [67] knitr_1.49                  GenomicRanges_1.58.0        ## [69] IRanges_2.40.1              MultiAssayExperiment_1.32.0 ## [71] rlang_1.1.5                 Rcpp_1.0.14                 ## [73] glue_1.8.0                  tweenr_2.0.3                ## [75] BiocManager_1.30.25         BiocGenerics_0.52.0         ## [77] jsonlite_1.8.9              R6_2.6.1                    ## [79] MatrixGenerics_1.18.1       systemfonts_1.2.1           ## [81] fs_1.6.5                    zlibbioc_1.52.0"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/articles/differential_associations.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Differential association testing with anansi","text":"","code":"sessionInfo() ## R version 4.4.2 (2024-10-31) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.1 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] anansi_0.6.0     BiocStyle_2.34.0 ##  ## loaded via a namespace (and not attached): ##  [1] SummarizedExperiment_1.36.0 gtable_0.3.6                ##  [3] xfun_0.50                   bslib_0.9.0                 ##  [5] ggplot2_3.5.1               htmlwidgets_1.6.4           ##  [7] Biobase_2.66.0              lattice_0.22-6              ##  [9] generics_0.1.3              vctrs_0.6.5                 ## [11] tools_4.4.2                 stats4_4.4.2                ## [13] parallel_4.4.2              tibble_3.2.1                ## [15] pkgconfig_2.0.3             Matrix_1.7-1                ## [17] desc_1.4.3                  S4Vectors_0.44.0            ## [19] lifecycle_1.0.4             GenomeInfoDbData_1.2.13     ## [21] farver_2.1.2                compiler_4.4.2              ## [23] textshaping_1.0.0           munsell_0.5.1               ## [25] ggforce_0.4.2               codetools_0.2-20            ## [27] GenomeInfoDb_1.42.3         htmltools_0.5.8.1           ## [29] sass_0.4.9                  yaml_2.3.10                 ## [31] pillar_1.10.1               pkgdown_2.1.1               ## [33] crayon_1.5.3                jquerylib_0.1.4             ## [35] MASS_7.3-61                 DelayedArray_0.32.0         ## [37] cachem_1.1.0                abind_1.4-8                 ## [39] parallelly_1.42.0           tidyselect_1.2.1            ## [41] digest_0.6.37               future_1.34.0               ## [43] dplyr_1.1.4                 bookdown_0.42               ## [45] listenv_0.9.1               polyclip_1.10-7             ## [47] fastmap_1.2.0               grid_4.4.2                  ## [49] colorspace_2.1-1            cli_3.6.4                   ## [51] SparseArray_1.6.1           magrittr_2.0.3              ## [53] S4Arrays_1.6.0              future.apply_1.11.3         ## [55] withr_3.0.2                 UCSC.utils_1.2.0            ## [57] scales_1.3.0                rmarkdown_2.29              ## [59] XVector_0.46.0              httr_1.4.7                  ## [61] matrixStats_1.5.0           globals_0.16.3              ## [63] ragg_1.3.3                  evaluate_1.0.3              ## [65] knitr_1.49                  GenomicRanges_1.58.0        ## [67] IRanges_2.40.1              MultiAssayExperiment_1.32.0 ## [69] rlang_1.1.5                 Rcpp_1.0.14                 ## [71] glue_1.8.0                  tweenr_2.0.3                ## [73] BiocManager_1.30.25         BiocGenerics_0.52.0         ## [75] jsonlite_1.8.9              R6_2.6.1                    ## [77] MatrixGenerics_1.18.1       systemfonts_1.2.1           ## [79] fs_1.6.5                    zlibbioc_1.52.0"},{"path":"https://thomazbastiaanssen.github.io/anansi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomaz Bastiaanssen. Author, maintainer. Thomas Quinn. Author. Giulio Benedetti. Author.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bastiaanssen TFS, Quinn TP, Cryan JF (2023) Knowledge-based Integration Multi-Omic Datasets Anansi: Annotation-based Analysis Specific Interactions arXiv. doi: 10.48550/arXiv.2305.10832","code":"@Article{,   title = {Knowledge-based Integration of Multi-Omic Datasets with Anansi: Annotation-based Analysis of Specific Interactions},   author = {Thomaz F S Bastiaanssen and Thomas P Quinn and John F Cryan},   journal = {arXiv},   year = {2023},   doi = {10.48550/arXiv.2305.10832}, }"},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Annotation-Based Analysis of Specific Interactions","text":"anansi package computes compares association features two ’omics data sets known interact based database KEGG. Studies including microbiome metabolomics data becoming common. Often, helpful integrate data sets order see corroborate others patterns. vs association imprecise likely yield spurious associations. package takes knowledge-based approach constrain association search space, considering metabolite-function interactions recorded pathway database. package also provides framework assess differential association. anansi geared towards metabolite-function interactions context host-microbe interactions, perfectly capable handling pair data sets features interact canonically.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/index.html","id":"installation-instructions","dir":"","previous_headings":"","what":"Installation instructions","title":"Annotation-Based Analysis of Specific Interactions","text":"Get latest stable R release CRAN. install anansi Bioconductor using following code: development version GitHub remotes:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(\"anansi\") install.packages(\"remotes\") remotes::install_github(\"thomazbastiaanssen/anansi\")"},{"path":"https://thomazbastiaanssen.github.io/anansi/index.html","id":"getting-started-using-anansi","dir":"","previous_headings":"","what":"Getting started using anansi","title":"Annotation-Based Analysis of Specific Interactions","text":"See vignettes package site.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Annotation-Based Analysis of Specific Interactions","text":"citation output using citation('anansi') R.","code":"print(citation('anansi'), bibtex = TRUE) #> To cite anansi in publications use: #>  #>   Bastiaanssen TFS, Quinn TP, Cryan JF (2023) Knowledge-based #>   Integration of Multi-Omic Datasets with Anansi: Annotation-based #>   Analysis of Specific Interactions arXiv. doi: #>   10.48550/arXiv.2305.10832 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {Knowledge-based Integration of Multi-Omic Datasets with Anansi: Annotation-based Analysis of Specific Interactions}, #>     author = {Thomaz F S Bastiaanssen and Thomas P Quinn and John F Cryan}, #>     journal = {arXiv}, #>     year = {2023}, #>     doi = {10.48550/arXiv.2305.10832}, #>   }"},{"path":"https://thomazbastiaanssen.github.io/anansi/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Annotation-Based Analysis of Specific Interactions","text":"Please note anansi project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_KOs.html","id":null,"dir":"Reference","previous_headings":"","what":"Snippet of the untransformed inferred functional data from the FMT Aging study. — FMT_KOs","title":"Snippet of the untransformed inferred functional data from the FMT Aging study. — FMT_KOs","text":"Piphillin used infer functions 16S sequencing data terms KOs. Unfortunately, Piphillin algorithm proprietary since taken .","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_KOs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snippet of the untransformed inferred functional data from the FMT Aging study. — FMT_KOs","text":"","code":"FMT_KOs"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_KOs.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Snippet of the untransformed inferred functional data from the FMT Aging study. — FMT_KOs","text":"marix object 6474 rows, KOs, 36 columns, samples.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_KOs.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Snippet of the untransformed inferred functional data from the FMT Aging study. — FMT_KOs","text":"doi:10.1038/s43587-021-00093-9","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_metab.html","id":null,"dir":"Reference","previous_headings":"","what":"Snippet of the CLR-transformed hippocampal metabolomics data from the FMT Aging study. — FMT_metab","title":"Snippet of the CLR-transformed hippocampal metabolomics data from the FMT Aging study. — FMT_metab","text":"Snippet CLR-transformed hippocampal metabolomics data FMT Aging study.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_metab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snippet of the CLR-transformed hippocampal metabolomics data from the FMT Aging study. — FMT_metab","text":"","code":"FMT_metab"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_metab.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Snippet of the CLR-transformed hippocampal metabolomics data from the FMT Aging study. — FMT_metab","text":"matrix object three rows, compounds, 36 columns, samples.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_metab.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Snippet of the CLR-transformed hippocampal metabolomics data from the FMT Aging study. — FMT_metab","text":"doi:10.1038/s43587-021-00093-9","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Snippet of the metadata from the FMT Aging study. — FMT_metadata","title":"Snippet of the metadata from the FMT Aging study. — FMT_metadata","text":"three treatment groups study received faecal microbiota transplantation (FMT). Young mice received FMT young mice (Young yFMT), aged mice received FMT aged mice (Aged oFMT) aged mice received FMT young mice (Aged yFMT).","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Snippet of the metadata from the FMT Aging study. — FMT_metadata","text":"","code":"FMT_metadata"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_metadata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Snippet of the metadata from the FMT Aging study. — FMT_metadata","text":"data.frame object 36 rows, samples, two columns, denoting sample ID treatemtn group, respectively.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/FMT_metadata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Snippet of the metadata from the FMT Aging study. — FMT_metadata","text":"doi:10.1038/s43587-021-00093-9","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/KO_member_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary to link KEGG orthologues based on their pathway membership. — KO_member_dic","title":"Dictionary to link KEGG orthologues based on their pathway membership. — KO_member_dic","text":"Dictionary link KEGG orthologues based pathway membership.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/KO_member_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary to link KEGG orthologues based on their pathway membership. — KO_member_dic","text":"","code":"KO_member_dic"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/KO_member_dic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary to link KEGG orthologues based on their pathway membership. — KO_member_dic","text":"list 467 named vectors. names refer pathways KEGG database. entries vectors refer KEGG orthologues make pathways.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/KO_member_dic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dictionary to link KEGG orthologues based on their pathway membership. — KO_member_dic","text":"Adapted https://www.genome.jp/kegg/","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/KO_translation.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup table to convert KEGG orthologue (KO) IDs to their human-readable counterparts — KO_translation","title":"Lookup table to convert KEGG orthologue (KO) IDs to their human-readable counterparts — KO_translation","text":"Lookup table convert KEGG orthologue (KO) IDs human-readable counterparts","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/KO_translation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup table to convert KEGG orthologue (KO) IDs to their human-readable counterparts — KO_translation","text":"","code":"KO_translation"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/KO_translation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lookup table to convert KEGG orthologue (KO) IDs to their human-readable counterparts — KO_translation","text":"data.frame two columns 24620 rows. first column refers KEGG orthologues (KOs) KEGG database. second column refers human readable counterpart.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/KO_translation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lookup table to convert KEGG orthologue (KO) IDs to their human-readable counterparts — KO_translation","text":"Adapted https://www.genome.jp/kegg/","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate an association network — anansi","title":"Calculate an association network — anansi","text":"main workspider function anansi package. manages individual functionalities anansi, including correlation analysis, correlation group differential correlation.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate an association network — anansi","text":"","code":"anansi(   web,   formula = ~1,   groups = NULL,   metadata,   adjust.method = \"BH\",   verbose = TRUE,   ignore_dictionary = FALSE,   return.format = \"table\" )"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate an association network — anansi","text":"web anansiWeb object, containing two tables 'omics data dictionary links . See weaveWebFromTables() weave web. formula formula object. Used assess differential associations. groups vector column names categorical values metadata object control groups assessed simple correlations. argument provided, anansi let know still regular correlations according dictionary. metadata vector data.frame categorical continuous value necessary differential correlations. Typically state treatment. argument provided, anansi let know still regular correlations according dictionary. adjust.method Method adjust p-values multiple comparisons. adjust.method = \"BH\" default value. See p.adjust() base R stats package. verbose boolean. Toggles whether print diagnostic information running. Useful debugging errors large datasets. ignore_dictionary boolean. Default FALSE. set TRUE, regular vs associations tested regardless dictionary. return.format Character scalar. one \"table\" , \"list\", \"raw\". output anansi respectively wide `data.frame` results, list containing results input, list raw output (used testing purposes). convenient use. (Default: \"table\")","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate an association network — anansi","text":"list lists containing correlation coefficients, p-values q-values operations.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate an association network — anansi","text":"","code":"# Load example data:  data(dictionary) data(FMT_data)  # Clean and prepare the example data. # In the example dataset, the metabolites are already cleaned.  KOs <- floor(FMT_KOs) KOs <- apply(KOs, c(1, 2), function(x) as.numeric(as.character(x))) KOs <- KOs[apply(KOs == 0, 1, sum) <= (ncol(KOs) * 0.90), ]  KOs <- KOs[row.names(KOs) %in% sort(unique(unlist(anansi_dic))), ]  # CLR-transform.  KOs.exp <- clr_c(KOs)  # Make sure that columns are features and rows are samples.  t1 <- t(FMT_metab) t2 <- t(KOs.exp)  # Run anansi pipeline.  web <- weaveWebFromTables(   tableY = t1,   tableX = t2,   dictionary = anansi_dic ) #> Operating in interaction mode #> 3 were matched between table 1 and the columns of the adjacency matrix #> 50 were matched between table 2 and the rows of the adjacency matrix  anansi_out <- anansi(   web = web,   formula = ~Legend,   groups = \"Legend\",   metadata = FMT_metadata,   adjust.method = \"BH\",   verbose = TRUE ) #> Fitting least-squares for following model: #> ~ x + Legend + x:Legend  #> Running correlations for the following groups: #>  Aged yFMT, Aged oFMT, Young yFMT  # To recreate the long plot: library(tidyr) library(ggplot2)  anansiLong <- anansi_out |>    pivot_longer(starts_with(\"All\") | contains(\"FMT\")) |>    separate_wider_delim(        name, delim = \"_\", names = c(\"cor_group\", \"cor_param\")            ) |>            pivot_wider(names_from = cor_param, values_from = value)  # Now it's ready to be plugged into ggplot2, though let's filter a bit more.  # Only consider interactions where the entire model fits well enough. anansiLong <- anansiLong[anansiLong$full_q.values < 0.1, ]    ggplot(   data = anansiLong,   aes(     x = r.values,     y = feature_X,     fill = cor_group,     alpha = disjointed_Legend_p.values < 0.05   ) ) +    # Make a vertical dashed red line at x = 0   geom_vline(xintercept = 0, linetype = \"dashed\", colour = \"red\") +    # Points show  raw correlation coefficients   geom_point(shape = 21, size = 3) +    # facet per compound   ggforce::facet_col(~feature_Y, space = \"free\", scales = \"free_y\") +    # fix the scales, labels, theme and other layout   scale_y_discrete(limits = rev, position = \"right\") +   scale_alpha_manual(values = c(\"TRUE\" = 1, \"FALSE\" = 1 / 3)) +   scale_fill_manual(values = c(     \"Young yFMT\" = \"#2166ac\",     \"Aged oFMT\" = \"#b2182b\",     \"Aged yFMT\" = \"#ef8a62\",     \"All\" = \"gray\"   )) +   theme_bw() +   ylab(\"\") +   xlab(\"Pearson's rho\")   # See also ?spinToPlots"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi.p.adjust.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle FDR methods for anansi. — anansi.p.adjust","title":"Handle FDR methods for anansi. — anansi.p.adjust","text":"Handle FDR methods anansi.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi.p.adjust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle FDR methods for anansi. — anansi.p.adjust","text":"","code":"anansi.p.adjust(results, method)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi.p.adjust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle FDR methods for anansi. — anansi.p.adjust","text":"results results table containing p-values adjusted. method p-value adjustment method. See ?p.adjust.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi.p.adjust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle FDR methods for anansi. — anansi.p.adjust","text":"`results` table, extended adjusted p.values.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCor","title":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCor","text":"Compute r-statistics featureY-featureX pair dictionary. Typically, main anansi() function run .","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCor","text":"","code":"anansiCor(web, group.bool)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCor","text":"web anansiWeb object, containing two tables omics data dictionary links . See weaveWebFromTables() weave web. group.bool boolean vector used select samples included correlations.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCor","text":"matrix r-statistics.","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCorPvalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCorPvalue","title":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCorPvalue","text":"Compute r-statistics featureY-featureX pair dictionary. Typically, main anansi() function run .","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCorPvalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCorPvalue","text":"","code":"anansiCorPvalue(web, group.bool, verbose)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCorPvalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCorPvalue","text":"web anansiWeb object, containing two tables omics data dictionary links . See weaveWebFromTables() weave web. group.bool categorical continuous value necessary differential correlations. Typically state treatment score. argument provided, anansi let know still regular correlations according dictionary. verbose boolean. Toggles whether print diagnostic information running. Useful debugging errors large datasets.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCorPvalue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute r-statistics for each featureY-featureX pair in the dictionary. Typically, the main anansi() function will run this for you. — anansiCorPvalue","text":"anansiTale result object.","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCorTestByGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Run correlations for all interacting metabolites and functions. — anansiCorTestByGroup","title":"Run correlations for all interacting metabolites and functions. — anansiCorTestByGroup","text":"groups argument suitable, also run correlation analysis per group. Typically, main anansi() function run .","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCorTestByGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run correlations for all interacting metabolites and functions. — anansiCorTestByGroup","text":"","code":"anansiCorTestByGroup(web, group.vec, verbose = TRUE)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCorTestByGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run correlations for all interacting metabolites and functions. — anansiCorTestByGroup","text":"web anansiWeb object, containing two tables omics data dictionary links . See weaveWebFromTables() weave web. group.vec character vector denoting group membership. Typically state treatment score. verbose boolean. Toggles whether print diagnostic information running. Useful debugging errors large datasets.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiCorTestByGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run correlations for all interacting metabolites and functions. — anansiCorTestByGroup","text":"list anansiTale result objects, one total dataset per group applicable.","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiDiffCor.html","id":null,"dir":"Reference","previous_headings":"","what":"Run differential correlation analysis for all interacting metabolites and functions. — anansiDiffCor","title":"Run differential correlation analysis for all interacting metabolites and functions. — anansiDiffCor","text":"Can either take continuous categorical data. Typically, main anansi() function run .","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiDiffCor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run differential correlation analysis for all interacting metabolites and functions. — anansiDiffCor","text":"","code":"anansiDiffCor(web, sat_model, errorterm, int.terms, metadata, verbose)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiDiffCor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run differential correlation analysis for all interacting metabolites and functions. — anansiDiffCor","text":"web anansiWeb object, containing two tables omics data dictionary links . See weaveWebFromTables() weave web. sat_model formula object, containing full model errorterm character vector, containing metadata col.name denoting repeated measures. int.terms character vector, containing metadata col.names denoting covariates interacting X tested differential associations. metadata vector data.frame categorical continuous value necessary differential correlations. Often state treatment score. argument provided, anansi let know still regular correlations according dictionary. verbose boolean. Toggles whether print diagnostic information running. Useful debugging errors large datasets.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiDiffCor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run differential correlation analysis for all interacting metabolites and functions. — anansiDiffCor","text":"list anansiTale result objects, one total model, one emergent correlations one disjointed correlations.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiInput-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to contain all anansi input so that they can easily be extracted. — anansiInput-class","title":"An S4 class to contain all anansi input so that they can easily be extracted. — anansiInput-class","text":"anansiInput container hold input data anansiYarn output file coming anansi pipeline.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiInput-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to contain all anansi input so that they can easily be extracted. — anansiInput-class","text":"input list holds input data anansiWeb format, well int.terms corresponding groups, equivalent lm.formula error.term argument(s) provided.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiTale-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to contain all anansi stats results so that they can easily be extracted. — anansiTale-class","title":"An S4 class to contain all anansi stats results so that they can easily be extracted. — anansiTale-class","text":"anansiTale main container hold stats output data coming anansi pipeline.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiTale-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to contain all anansi stats results so that they can easily be extracted. — anansiTale-class","text":"subject character describes data queried. type character describes type parameter contained estimates slot. example r.values correlations r.squared models. df vector length 2, containing df1 df2 corresponding F-ratio considered. estimates matrix containing estimates parameters named type slot. f.valules matrix containing f-values, least-squares. t.valules matrix containing t-values, correlations. p.values matrix containing p.values parameters named type slot.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiWeb-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class to contain all metabolomics and functional input data as well as a dictionary to link them. — anansiWeb-class","title":"An S4 class to contain all metabolomics and functional input data as well as a dictionary to link them. — anansiWeb-class","text":"anansiWeb main container hold input data thoughout anansi pipeline.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansiWeb-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class to contain all metabolomics and functional input data as well as a dictionary to link them. — anansiWeb-class","text":"tableY matrix metabolomics data. Rows samples columns features. tableX matrix functional data. Rows samples columns features. dictionary binary adjacency matrix. Typically generated using weaveWebFromTables() function.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi_compute_clr.html","id":null,"dir":"Reference","previous_headings":"","what":"compute CLR using Aitchison's method — anansi_compute_clr","title":"compute CLR using Aitchison's method — anansi_compute_clr","text":"See clr_lite.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi_compute_clr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute CLR using Aitchison's method — anansi_compute_clr","text":"","code":"anansi_compute_clr(x)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi_compute_clr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute CLR using Aitchison's method — anansi_compute_clr","text":"x vector compositional data without zeroes.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi_compute_clr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute CLR using Aitchison's method — anansi_compute_clr","text":"vector CLR-transformed data","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Dictionary to link KEGG compounds to KEGG orthologues — anansi_dic","title":"Dictionary to link KEGG compounds to KEGG orthologues — anansi_dic","text":"Dictionary link KEGG compounds KEGG orthologues","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dictionary to link KEGG compounds to KEGG orthologues — anansi_dic","text":"","code":"anansi_dic"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi_dic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dictionary to link KEGG compounds to KEGG orthologues — anansi_dic","text":"list 18844 named vectors. names refer compounds KEGG database. entries vectors refer KEGG orthologues associated compounds; typically either producing requiring .","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/anansi_dic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dictionary to link KEGG compounds to KEGG orthologues — anansi_dic","text":"Adapted https://www.genome.jp/kegg/","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/assessWebCall.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to assess the input feature tables — assessWebCall","title":"Helper function to assess the input feature tables — assessWebCall","text":"Assess input tables. Mostly prepare within-table associations. Called weaveWebFromTables.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/assessWebCall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to assess the input feature tables — assessWebCall","text":"","code":"assessWebCall(tableY, tableX, verbose)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/assessWebCall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to assess the input feature tables — assessWebCall","text":"tableY table containing features interest. Rows samples columns features. Y X refer position features formula: Y ~ X. tableX table containing features interest. Rows samples columns features. Y X refer position features formula: Y ~ X. left empty, tableY duplicated. verbose boolean. Toggles whether print diagnostic information running. Useful debugging errors large datasets.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/assessWebCall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to assess the input feature tables — assessWebCall","text":"potentially adjusted tableX.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_imputed.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample random values, perform CLR over each iteration and return the median result. — clr_imputed","title":"Resample random values, perform CLR over each iteration and return the median result. — clr_imputed","text":"See clr_lite.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_imputed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample random values, perform CLR over each iteration and return the median result. — clr_imputed","text":"","code":"clr_imputed(vec, method = \"logunif\", replicates = 1000)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_imputed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample random values, perform CLR over each iteration and return the median result. — clr_imputed","text":"vec vector compositional data may contain zeroes. method method zero imputation. One \"logunif\", \"unif\" \"const\". replicates positive integer. Default 1000. Controls many replicates median taken .","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_imputed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample random values, perform CLR over each iteration and return the median result. — clr_imputed","text":"vector CLR-transformed data","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_lite.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute zeroes and perform a centered log-ratio (CLR) transformation — clr_lite","title":"Impute zeroes and perform a centered log-ratio (CLR) transformation — clr_lite","text":"Microbiome data compositional. compositional data examined using non-compositional methods, many problems arise. Performing centered log-ratio transformation reasonable way address problems reasonably well.  major problem approach microbiome data typically contains lots zeroes logarithm zero undefined. , implemented methods discussed Lubbe et al. 2021 replace zeroes non-zero values way structure data remains reasonably well preserved.  methods (namely 'logunif' 'runif') involve imputing small values 0 lowest non-zero value dataset. methods, implemented resampling approach order stabilize inter-run variability. See method information.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_lite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute zeroes and perform a centered log-ratio (CLR) transformation — clr_lite","text":"","code":"clr_lite(counts, samples_are = \"cols\", method = \"logunif\", replicates = 1000)  clr_c(counts, samples_are = \"cols\")  clr_unif(counts, samples_are = \"cols\", replicates = 1000)  clr_logunif(counts, samples_are = \"cols\", replicates = 1000)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_lite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute zeroes and perform a centered log-ratio (CLR) transformation — clr_lite","text":"counts compositional count table. samples_are Either \"cols\" \"rows\". Default \"cols\". Denotes whether columns rows depict individual samples. method method zero imputation. One \"logunif\", \"unif\" \"const\". 'logunif' samples small numbers log-uniform distribution, whereas 'unif' samples uniform one. hand, \"const\" simply replaces zeroes 0.65 * [lowest value]. replicates integer. two random sampling methods, larger 1, every zero imputed many times. median CLR replicates returned. method set \"const\", replicates automatically set 1 random numbers generated.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_lite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute zeroes and perform a centered log-ratio (CLR) transformation — clr_lite","text":"CLR-transformed count table.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_lite.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Impute zeroes and perform a centered log-ratio (CLR) transformation — clr_lite","text":"clr_c:  wrapper clr_lite(counts, method = \"const\", replicates = 1). clr_unif:  wrapper clr_lite(counts, method = \"unif\"). clr_logunif:  wrapper clr_lite(counts, method = \"logunif\").","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/clr_lite.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Impute zeroes and perform a centered log-ratio (CLR) transformation — clr_lite","text":"Sugnet Lubbe, Peter Filzmoser, Matthias Templ (2021) Comparison zero replacement strategies compositional data large numbers zeros. doi:https://doi.org/10.1016/j.chemolab.2021.104248","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/cpd_translation.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup table to convert KEGG compound IDs to their human-readable counterparts — cpd_translation","title":"Lookup table to convert KEGG compound IDs to their human-readable counterparts — cpd_translation","text":"Lookup table convert KEGG compound IDs human-readable counterparts","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/cpd_translation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup table to convert KEGG compound IDs to their human-readable counterparts — cpd_translation","text":"","code":"cpd_translation"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/cpd_translation.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lookup table to convert KEGG compound IDs to their human-readable counterparts — cpd_translation","text":"data.frame two columns 18871 rows. first column refers compounds KEGG database. second column refers human readable counterpart.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/cpd_translation.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lookup table to convert KEGG compound IDs to their human-readable counterparts — cpd_translation","text":"Adapted https://www.genome.jp/kegg/","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/frame.tale.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract information from an anansiTale object and parse it into a neat table — frame.tale","title":"Extract information from an anansiTale object and parse it into a neat table — frame.tale","text":"Extract information anansiTale object parse neat table","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/frame.tale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract information from an anansiTale object and parse it into a neat table — frame.tale","text":"","code":"frame.tale(tale, dic)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/frame.tale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract information from an anansiTale object and parse it into a neat table — frame.tale","text":"tale anansiTale object dic dictionary.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/frame.tale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract information from an anansiTale object and parse it into a neat table — frame.tale","text":"wide format data.frame summary statistics feature pair.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/getAnansi.html","id":null,"dir":"Reference","previous_headings":"","what":"anansi wrapper for the MultiAssayExperiment class — getAnansi","title":"anansi wrapper for the MultiAssayExperiment class — getAnansi","text":"getAnansi provides wrapper execute anansi pipeline MultiAssayExperiment object. applies functions weaveWebFromTables anansi given order.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/getAnansi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"anansi wrapper for the MultiAssayExperiment class — getAnansi","text":"","code":"getAnansi(x, ...)  # S4 method for class 'MultiAssayExperiment' getAnansi(   x,   experiment1 = 1,   experiment2 = 2,   assay.type1 = \"counts\",   assay.type2 = \"counts\",   ... )"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/getAnansi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"anansi wrapper for the MultiAssayExperiment class — getAnansi","text":"x MultiAssayExperiment. ... additional parameters can passed weaveWebFromTables anansi. experiment1 Character scalar numeric scalar. Selects experiment 1 experiments(x) MultiassayExperiment object. (Default: 1) experiment2 Character scalar numeric scalar. Selects experiment 2 fromexperiments(x) MultiAssayExperiment object. (Default: 2) assay.type1 Character scalar. Specifies name assay experiment 1 used. (Default: \"counts\") assay.type2 Character scalar. Specifies name assay experiment 2 used. (Default: \"counts\")","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/getAnansi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"anansi wrapper for the MultiAssayExperiment class — getAnansi","text":"return.format \"table\" (default), wide format data.frame intended compatible `ggplot2`, specialized plotting functions (See plotAnansi). return.format \"list\", list aforementioned table, well input additional information. return.format \"raw\", list raw output (used testing purposes).","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/getAnansi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"anansi wrapper for the MultiAssayExperiment class — getAnansi","text":"wrapper anansi allows perform complete anansi analysis directly objects class MultiAssayExperiment . First, assays specified assay.type1 assay.type2 passed weaveWebFromTables build anansiWeb object. Next, object fed main anansi function compute interactions two assays.","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/getAnansi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"anansi wrapper for the MultiAssayExperiment class — getAnansi","text":"","code":"# Import libraries library(mia) #> Loading required package: MultiAssayExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, saveRDS, setdiff, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:tidyr’: #>  #>     expand #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians #> Loading required package: SingleCellExperiment #> Loading required package: TreeSummarizedExperiment #> Loading required package: Biostrings #> Loading required package: XVector #>  #> Attaching package: ‘Biostrings’ #> The following object is masked from ‘package:base’: #>  #>     strsplit #> This is mia version 1.14.0 #> - Online documentation and vignettes: https://microbiome.github.io/mia/ #> - Online book 'Orchestrating Microbiome Analysis (OMA)': https://microbiome.github.io/OMA/docs/devel/ library(TreeSummarizedExperiment) library(MultiAssayExperiment)  # Load data data(\"FMT_data\", package = \"anansi\") data(\"dictionary\", package = \"anansi\")  # Convert to (Tree)SummarizedExperiment objects metab_se <- SummarizedExperiment(assays = SimpleList(conc = as.matrix(FMT_metab))) KO_tse <- TreeSummarizedExperiment(assays = SimpleList(counts = as.matrix(FMT_KOs)))  # Select functions that are represented in the dictionary keep <- row.names(KO_tse) %in% sort(unique(unlist(anansi_dic))) KO_tse <- KO_tse[keep, ]  # Remove features with less than 10% prevalence KO_tse <- subsetByPrevalent(KO_tse,   assay.type = \"counts\",   prevalence = 0.1 )  # Perform a centered log-ratio transformation on the functional counts assay KO_tse <- transformAssay(KO_tse,   assay.type = \"counts\",   method = \"clr\",   pseudocount = TRUE ) #> A pseudocount of 0.125 was applied.  # Prepare colData coldata <- FMT_metadata rownames(coldata) <- coldata$Sample_ID coldata <- coldata[match(colnames(KO_tse), rownames(coldata)), ]  # Combine experiments into MultiAssayExperiment object mae <- MultiAssayExperiment(   experiments = ExperimentList(metabolites = metab_se, functions = KO_tse),   colData = coldata )  # Perform anansi analysis out <- getAnansi(mae,   experiment1 = \"metabolites\", experiment2 = \"functions\",   assay.type1 = \"conc\", assay.type2 = \"clr\",   formula = ~Legend ) #> Operating in interaction mode #> 3 were matched between table 1 and the columns of the adjacency matrix #> 53 were matched between table 2 and the rows of the adjacency matrix #> Fitting least-squares for following model: #> ~ x + Legend + x:Legend  #> Running correlations for the following groups: #>  Aged yFMT, Aged oFMT, Young yFMT  # Select significant interactions out <- out[out$full_q.values < 0.1, ]  # View subset of results head(out, 5) #>    feature_Y feature_X All_r.values All_t.values All_p.values #> 5     C00064    K00266   0.26816810    1.6231270 0.1137993609 #> 7     C00064    K00764   0.38270008    2.4153825 0.0212427596 #> 8     C00064    K00820   0.40196879    2.5597685 0.0150909717 #> 16    C00064    K01658   0.03387352    0.1976283 0.8445127374 #> 18    C00064    K01665  -0.56901746    4.0347936 0.0002930505 #>    Aged yFMT_r.values Aged yFMT_t.values Aged yFMT_p.values Aged oFMT_r.values #> 5        -0.220111086        0.713552377         0.49182117          0.6382313 #> 7         0.060761854        0.192501541         0.85120253          0.4437382 #> 8         0.521487660        1.932694667         0.08206763          0.2602260 #> 16       -0.153699837        0.491886361         0.63341789          0.1628807 #> 18       -0.002416446        0.007641496         0.99405332         -0.7598952 #>    Aged oFMT_t.values Aged oFMT_p.values Young yFMT_r.values #> 5           2.6216519        0.025525253          0.18129589 #> 7           1.5658242        0.148458051         -0.08085211 #> 8           0.8522696        0.414009914         -0.06846819 #> 16          0.5220455        0.613005559         -0.35944840 #> 18          3.6966633        0.004131173         -0.18024655 #>    Young yFMT_t.values Young yFMT_p.values full_r.squared full_f.values #> 5            0.5829686           0.5728253      0.4819152      9.301861 #> 7            0.2565166           0.8027521      0.5217816     10.910948 #> 8            0.2170247           0.8325528      0.5114644     10.469337 #> 16           1.2180865           0.2511501      0.6722259     20.508817 #> 18           0.5794807           0.5750863      0.6872255     21.971913 #>    full_p.values disjointed_Legend_r.squared disjointed_Legend_f.values #> 5   1.669397e-04                  0.13016621                  2.2446739 #> 7   5.202610e-05                  0.04979116                  0.7860034 #> 8   7.102623e-05                  0.04912970                  0.7750221 #> 16  2.018261e-07                  0.05327604                  0.8441114 #> 18  1.009712e-07                  0.08528630                  1.3985736 #>    disjointed_Legend_p.values emergent_Legend_r.squared #> 5                   0.1234651               0.101973819 #> 7                   0.4648213               0.053554944 #> 8                   0.4696986               0.003406369 #> 16                  0.4398966               0.053272704 #> 18                  0.2625897               0.101664947 #>    emergent_Legend_f.values emergent_Legend_p.values All_q.values #> 5                1.64652257                0.2102280   0.40209108 #> 7                0.82048787                0.4501771   0.18764438 #> 8                0.04956118                0.9517274   0.18764438 #> 16               0.81592050                0.4521276   0.91486829 #> 18               1.64097097                0.2112788   0.01553168 #>    Aged yFMT_q.values Aged oFMT_q.values Young yFMT_q.values full_q.values #> 5           0.6516630         0.22547307           0.8900618  7.373168e-04 #> 7           0.9598667         0.59098856           0.9542867  3.063759e-04 #> 8           0.2915824         0.73572602           0.9542867  3.764390e-04 #> 16          0.7629806         0.78875081           0.7980358  2.674196e-06 #> 18          0.9940533         0.07298405           0.8900618  2.674196e-06 #>    disjointed_Legend_q.values emergent_Legend_q.values #> 5                   0.4164913                0.5434474 #> 7                   0.6383083                0.7248090 #> 8                   0.6383083                0.9517274 #> 16                  0.6301221                0.7248090 #> 18                  0.5352791                0.5434474"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/impute_zeroes.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace zeroes with non-zero values in order to perform a CLR-transformation — impute_zeroes","title":"Replace zeroes with non-zero values in order to perform a CLR-transformation — impute_zeroes","text":"See clr_lite.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/impute_zeroes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace zeroes with non-zero values in order to perform a CLR-transformation — impute_zeroes","text":"","code":"impute_zeroes(vec, method = \"logunif\")"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/impute_zeroes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace zeroes with non-zero values in order to perform a CLR-transformation — impute_zeroes","text":"vec vector compositional data may contain zeroes. method method zero imputation. One \"logunif\", \"unif\" \"const\".","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/impute_zeroes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace zeroes with non-zero values in order to perform a CLR-transformation — impute_zeroes","text":"vector zeroes replaced non-zero values.","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Starting point to wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrix","title":"Starting point to wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrix","text":"Takes anansi dictionary list format wrangles binary adjacency matrix.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Starting point to wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrix","text":"","code":"makeAdjacencyMatrix(dict_list, tableY = NULL, verbose = TRUE, mode = mode)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Starting point to wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrix","text":"dict_list list tableY names entries case mode == \"interaction\" group names case mode == \"membership\". general use, recommend using one provided package. tableY matrix containing y features interest. Rows samples columns features. used mode == \"interaction\". verbose boolean. Toggles whether print diagnostic information running. Useful debugging errors large datasets. mode character vector. Can \"interaction\" \"membership\". Toggles whether link two datasets based interactions based shared group membership.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Starting point to wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrix","text":"binary adjacency matrix features tableY rows features tableX columns.","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrixFromGroupMemberList.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromGroupMemberList","title":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromGroupMemberList","text":"Takes anansi dictionary list format wrangles binary adjacency matrix based group membership. general use, probably called directly, rather weaveWebFromTables.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrixFromGroupMemberList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromGroupMemberList","text":"","code":"makeAdjacencyMatrixFromGroupMemberList(dict_list, mode = mode)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrixFromGroupMemberList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromGroupMemberList","text":"dict_list list tableY names entries case mode == \"interaction\" groupnames case mode == \"membership\". general use, recommend using one provided package. mode character vector. Can \"interaction\" \"membership\". Toggles whether link two datasets based interactions based shared group membership.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrixFromGroupMemberList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromGroupMemberList","text":"binary adjacency matrix group members rows columns.","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrixFromList.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromList","title":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromList","text":"Takes anansi dictionary list format wrangles binary adjacency matrix based tableY features present dictionary  tableY. general use, probably called directly, rather weaveWebFromTables.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrixFromList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromList","text":"","code":"makeAdjacencyMatrixFromList(tableY = NULL, dict_list, mode = \"interaction\")"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrixFromList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromList","text":"tableY matrix containing features interest. Rows samples columns features. dict_list list tableY names entries case mode == \"interaction\" groupnames case mode == \"membership\". general use, recommend using one provided package. mode character vector. Can \"interaction\" \"membership\". Toggles whether link two datasets based interactions based shared group membership.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/makeAdjacencyMatrixFromList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrangle anansi dictionary list into binary adjacency matrix — makeAdjacencyMatrixFromList","text":"binary adjacency matrix group members rows columns.","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/mock_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to make a mock dictionary — mock_dictionary","title":"Helper function to make a mock dictionary — mock_dictionary","text":"Make full vs dictionary case vs analysis.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/mock_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to make a mock dictionary — mock_dictionary","text":"","code":"mock_dictionary(tableY, tableX)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/mock_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to make a mock dictionary — mock_dictionary","text":"tableY table containing features interest. Rows samples columns features. Y X refer position features formula: Y ~ X. tableX table containing features interest. Rows samples columns features. Y X refer position features formula: Y ~ X.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/mock_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to make a mock dictionary — mock_dictionary","text":"full anansi dictionary list object.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/plotAnansi.html","id":null,"dir":"Reference","previous_headings":"","what":"Dissociation plot — plotAnansi","title":"Dissociation plot — plotAnansi","text":"plotAnansi generates standard dissociation plot output getAnansi long format. provides convenient way visually assess relevant results anansi analysis.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/plotAnansi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dissociation plot — plotAnansi","text":"","code":"plotAnansi(df, ...)  # S4 method for class 'data.frame' plotAnansi(   df,   x = \"r.values\",   association.type = \"disjointed\",   model.var = NULL,   colour_by = NULL,   color_by = colour_by,   fill_by = NULL,   size_by = NULL,   shape_by = NULL,   signif.threshold = NULL,   y_position = \"right\",   x_lab = \"cor\",   y_lab = \"\" )"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/plotAnansi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dissociation plot — plotAnansi","text":"df data.frame object output getAnansi long format. x Character scalar. Specifies type coefficient show plot. One \"r.values\", \"r.squared\"   \"q.values\". (Default: \"r.values\") association.type Character scalar. Specifies type association show plot. One \"disjointed\",   \"emergent\" \"full\". (Default: \"disjointed\") model.var Character scalar. Specifies name variable anansi model. relevant association.type   \"disjointed\" \"emergent\". (Default: NULL) colour_by Character scalar. Specifies name column df points coloured. (Default: NULL) color_by Character scalar. Alias colour_by. fill_by Character scalar. Specifies name column df points filled (Default: NULL) size_by Character scalar. Specifies name column df points sized (Default: NULL) shape_by Character scalar. Specifies name column df points shaped (Default: NULL) signif.threshold Numeric scalar. Specifies significance threshold show plot. (Default: NULL) y_position Character scalar. Specifies position y labels. either \"left\" \"right\". (Default: \"right\") x_lab Character scalar. Specifies label x axis. (Default: \"cor\") y_lab Character scalar. Specifies label y axis. (Default: \"\")","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/plotAnansi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dissociation plot — plotAnansi","text":"ggplot2 object.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/plotAnansi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dissociation plot — plotAnansi","text":"plotAnansi provides standardised method visualise results anansi means differential association plot. input function generated getAnansi anansi, return.format = \"long\"","code":""},{"path":[]},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/plotAnansi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dissociation plot — plotAnansi","text":"","code":"if (FALSE) { # \\dontrun{ # Import libraries library(mia) library(TreeSummarizedExperiment) library(MultiAssayExperiment)  # Load data data(\"FMT_data\", package = \"anansi\") data(\"dictionary\", package = \"anansi\")  # Convert to (Tree)SummarizedExperiment objects metab_se <- SummarizedExperiment(assays = SimpleList(conc = as.matrix(FMT_metab))) KO_tse <- TreeSummarizedExperiment(assays = SimpleList(counts = as.matrix(FMT_KOs)))  # Select functions that are represented in the dictionary keep <- row.names(KO_tse) %in% sort(unique(unlist(anansi_dic))) KO_tse <- KO_tse[keep, ]  # Remove features with less than 10% prevalence KO_tse <- subsetByPrevalent(KO_tse,   assay.type = \"counts\",   prevalence = 0.1 )  # Perform a centered log-ratio transformation on the functional counts assay KO_tse <- transformAssay(KO_tse,   assay.type = \"counts\",   method = \"clr\",   pseudocount = TRUE )  # Prepare colData coldata <- FMT_metadata rownames(coldata) <- coldata$Sample_ID coldata <- coldata[match(colnames(KO_tse), rownames(coldata)), ]  # Combine experiments into MultiAssayExperiment object mae <- MultiAssayExperiment(   experiments = ExperimentList(metabolites = metab_se, functions = KO_tse),   colData = coldata )  # Perform anansi analysis out <- getAnansi(mae,   experiment1 = \"metabolites\", experiment2 = \"functions\",   assay.type1 = \"conc\", assay.type2 = \"clr\",   formula = ~Legend, translate = TRUE,   X_translation = KO_translation, Y_translation = cpd_translation )  # Select significant interactions out <- out[out$model_full_q.values < 0.1, ]  # Generate dissociation plot plotAnansi(out, fill_by = \"type\", signif.threshold = 0.05) } # }"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/prune_dictionary_for_exclusivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Kick out particularly large groups before wrangling the dictionary list into a binary adjacency matrix. — prune_dictionary_for_exclusivity","title":"Kick out particularly large groups before wrangling the dictionary list into a binary adjacency matrix. — prune_dictionary_for_exclusivity","text":"Takes anansi dictionary list format prunes larges groups based sd median.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/prune_dictionary_for_exclusivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kick out particularly large groups before wrangling the dictionary list into a binary adjacency matrix. — prune_dictionary_for_exclusivity","text":"","code":"prune_dictionary_for_exclusivity(dict_list, max_sds = 3, verbose = TRUE)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/prune_dictionary_for_exclusivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kick out particularly large groups before wrangling the dictionary list into a binary adjacency matrix. — prune_dictionary_for_exclusivity","text":"dict_list list tableY names entries case mode == \"interaction\" group names case mode == \"membership\". general use, recommend using one provided package. max_sds numeric, many standard deviantions larger group median groups allowed ? verbose boolean. Toggles whether print diagnostic information running. Useful debugging errors large datasets.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/prune_dictionary_for_exclusivity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kick out particularly large groups before wrangling the dictionary list into a binary adjacency matrix. — prune_dictionary_for_exclusivity","text":"pruned anansi dictionary list object.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/softmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Undo CLR transformation with softmax — softmax","title":"Undo CLR transformation with softmax — softmax","text":"softmax function transform vector relative abundance/proportions.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/softmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Undo CLR transformation with softmax — softmax","text":"","code":"softmax(x)"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/softmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Undo CLR transformation with softmax — softmax","text":"x clr-transformed vector","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/softmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Undo CLR transformation with softmax — softmax","text":"relative abundance/proportions vector.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/weaveWebFromTables.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an anansiWeb object from two 'omics tables and a dictionary — weaveWebFromTables","title":"Create an anansiWeb object from two 'omics tables and a dictionary — weaveWebFromTables","text":"function take two tables 'omics data, example metabolomics functional microbiome data. also take dictionary list, provided package.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/weaveWebFromTables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an anansiWeb object from two 'omics tables and a dictionary — weaveWebFromTables","text":"","code":"weaveWebFromTables(   tableY,   tableX = NULL,   dictionary = anansi::anansi_dic,   verbose = TRUE,   mode = \"interaction\",   prune = FALSE,   max_sds = 3 )"},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/weaveWebFromTables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an anansiWeb object from two 'omics tables and a dictionary — weaveWebFromTables","text":"tableY table containing features interest. Rows samples columns features. Y X refer position features formula: Y ~ X. tableX table containing features interest. Rows samples columns features. Y X refer position features formula: Y ~ X. left empty, tableY duplicated. dictionary list feature names tableY names. Default dictionary provided package. verbose boolean. Toggles whether print diagnostic information running. Useful debugging errors large datasets. mode character vector. Can \"interaction\" \"membership\". Toggles whether link two datasets based interactions based shared group membership. prune boolean. Toggles whether prune particularly large groups. max_sds numeric. relevant prune == TRUE. many SDs larger median group can pruned. general use, recommend sticking one. can access dictionary like : data(dictionary)","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/reference/weaveWebFromTables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an anansiWeb object from two 'omics tables and a dictionary — weaveWebFromTables","text":"anansiWeb object. Web used input main workflow anansi.","code":""},{"path":"https://thomazbastiaanssen.github.io/anansi/news/index.html","id":"anansi-060","dir":"Changelog","previous_headings":"","what":"anansi 0.6.0","title":"anansi 0.6.0","text":"NEW FEATURES Added NEWS.md file track changes package.","code":""}]
